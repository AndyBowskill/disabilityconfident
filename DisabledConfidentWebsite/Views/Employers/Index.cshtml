@model PaginatedList<DisabledConfidentWebsite.Models.Employer>

@{
    ViewData["Title"] = "Index";
}

<section id="employee-table">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h3>Employers That Have Signed Up</h3>
                <hr />

                <form asp-action="Index" method="get">
                    <div class="form-actions no-color">
                        <p>Filter the results from the employer's town or city and the sector they work in. Please note that the filter is case-insensitive and part-words is allowed.</p>
                        <p>
                            Employee's Town or City: <input type="text" name="searchPlace" value="@ViewData["currentPlaceFilter"]" />
                            Employee's Sector: <input type="text" name="searchSector" value="@ViewData["currentSectorFilter"]" />
                            <input type="submit" value="Search" class="btn btn-secondary" /> |
                            <a asp-action="Index">Back to Full List</a>
                        </p>
                    </div>
                </form>

                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>
                                Name
                            </th>
                            <th>
                                Town or City
                            </th>
                            <th>
                                Sector
                            </th>
                            <th>
                                DC Level
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Place)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Sector)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DCLevel)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @{
                    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                }

                <a asp-action="Index"
                   asp-route-page="@(Model.PageIndex - 1)"
                   asp-route-currentPlaceFilter="@ViewData["currentPlaceFilter"]"
                   asp-route-currentSectorFilter="@ViewData["currentSectorFilter"]"
                   class="btn btn-secondary @prevDisabled">
                    Previous
                </a>
                <a asp-action="Index"
                   asp-route-page="@(Model.PageIndex + 1)"
                   asp-route-currentPlaceFilter="@ViewData["currentPlaceFilter"]"
                   asp-route-currentSectorFilter="@ViewData["currentSectorFilter"]"
                   class="btn btn-secondary @nextDisabled">
                    Next
                </a>

            </div>

        </div>
    </div>
</section>

<section id="employee-bar-chart" >
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h3>Count Of Employers By Sector</h3>
                <hr />
                <img src="images/bar-chart.png" class="img-fluid" alt="">
            </div>
        </div>
    </div>
</section>
