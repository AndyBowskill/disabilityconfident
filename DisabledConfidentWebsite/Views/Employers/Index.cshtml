@model PaginatedList<DisabledConfidentWebsite.Models.Employer>

@{
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class="col-md-12">
        <h3>List Of Employers That Have Signed Up</h3>
        <hr />

        <form asp-action="Index" method="get">
            <div class="form-actions no-color">
                <p>
                    Employee's Sector: <input type="text" name="searchString" value="@ViewData["currentFilter"]" />
                    <input type="submit" value="Search" class="btn btn-secondary" /> |
                    <a asp-action="Index">Back to Full List</a>
                </p>
            </div>
        </form>

        @*<form asp-action="Index" method="get">
            <div class="form-actions no-color">
                <p>
                    <span>Employer's Sector</span>
                    <select asp-for="@ViewData["currentFilter"]" class="custom-select">
                        <option value="Agriculture">Agriculture</option>
                        <option value="Other">Other</option>
                    </select>
                    <button type="submit" class="btn btn-secondary">Apply</button>
                </p>
            </div>
        </form>*@


        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Place
                    </th>
                    <th>
                        Sector
                    </th>
                    <th>
                        DC Level
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Place)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Sector)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DCLevel)
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Index"
           asp-route-page="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["currentFilter"]"
           class="btn btn-secondary @prevDisabled">
            Previous
        </a>
        <a asp-action="Index"
           asp-route-page="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["currentFilter"]"
           class="btn btn-secondary @nextDisabled">
            Next
        </a>

    </div>

    <div class="col-md-12">
        <h3>Employers That Have Signed Up</h3>
        <hr />
        <canvas id="employers-that-have-signed-up" width="628" height="741"></canvas>
    </div>

</div>